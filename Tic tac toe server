# -*- coding: utf-8 -*-
"""
Created on Mon Apr 15 13:09:05 2019

@author: M7md_Karam
"""

#for communication
from socket import socket, AF_INET, SOCK_STREAM
#for multithreading
from _thread import start_new_thread
#for GUI
from tkinter import Tk, messagebox, Label, Button

def receive_thread(c):
    global turn
    alphabet=['a','b','c','d','e','f','g','h','i']
    buttons=[btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9]    
    while True:
        x = c.recv(500).decode('UTF-8')
        y = -1
        for letter in alphabet:
            y = y + 1
            if x == letter:
                print (x);
                buttons[y].config(text = 'O')
                buttons[y].config(fg="blue")
        check()
        turn = 1;

def send(x):
    c.send(x.encode('UTF-8'))

#create a flag to determine whether the game ended or not.
flag = 1
#creating a function for checking whether there's a winner or not yet, it'll be invoked everytime a player clicks a button.
def check():
	#apply the definition of the flag variable in the global scope.
    global flag
	#check function will be called every time it's invoked.
    flag = flag + 1
    #for simplicity
    b1=btn1["text"] #equaling the text writen in btn1 with b1.
    b2=btn2["text"]
    b3=btn3["text"]
    b4=btn4["text"] #
    b5=btn5["text"]
    b6=btn6["text"]
    b7=btn7["text"] #
    b8=btn8["text"] #
    b9=btn9["text"]
    if (b1==b2 and b2==b3 and b1=='O') or (b4==b5 and b5==b6 and b4=='O') or (b7==b8 and b8==b9 and b7=='O') or (b1==b4 and b4==b7 and b1=='O') or (b2==b5 and b5==b8 and b2=='O') or (b3==b6 and b6==b9 and b3=='O') or (b1==b5 and b5==b9 and b1=='O') or (b3==b5 and b5==b7 and b3=='O'):
        #passing the name of the winner to the method win
        win("2")

    if (b1==b2 and b2==b3 and b1=='X') or (b4==b5 and b5==b6 and b4=='X') or (b7==b8 and b8==b9 and b7=='X') or (b1==b4 and b4==b7 and b1=='X') or (b2==b5 and b5==b8 and b2=='X') or (b3==b6 and b6==b9 and b3=='X') or (b1==b5 and b5==b9 and b1=='X') or (b3==b5 and b5==b7 and b3=='X'):
        win("1")            

	# if the flag reaches the value 10, that means that all the buttons are clicked without reaching a winning state.
    if flag == 10:
        messagebox.showinfo("Game ended","Game Ended")
        #the game closes
        window.destroy()
        
def win(player):
    messagebox.showinfo("Game ended ", "Player \""+player+"\" wins")
    window.destroy()

turn = 1
#create a flag to determine the who's the player with this turn.
def clicked1():
    #make the turn variable global.
    global turn
    if btn1["text"] == " ":
        if turn == 1:
            #modifying for the next play.
            turn = 2
            btn1["text"]='X'
            btn1["bg"]="blue"
            btn1["fg"]="white"
            send('a')
            check()
        else:
            pass;

def clicked2():
    global turn
    if btn2["text"] == " ":
        if turn == 1:
            turn = 2
            btn2["text"]='X'
            btn2["bg"]="blue"
            btn2["fg"]="white"
            send('b')
            check()
        else:
            pass;
        
def clicked3():
    global turn
    if btn3["text"] == " ":
        if turn == 1:
            turn = 2
            btn3["text"]='X'
            btn3["bg"]="blue"
            btn3["fg"]="white"
            send('c')
            check()
        else:
            btn3["text"] = " "
        
def clicked4():
    global turn
    if btn4["text"] == " ":
        if turn == 1:
            turn = 2
            btn4["text"]='X'
            btn4["bg"]="blue"
            btn4["fg"]="white"
            send('d')
            check()
        else:
            btn4["text"] = " "
        
def clicked5():
    global turn
    if btn5["text"] == " ":
        if turn == 1:
            turn = 2
            btn5["text"]='X'
            btn5["bg"]="blue"
            btn5["fg"]="white"
            send('e')
            check()
        else:
            pass;
        
def clicked6():
    global turn
    if btn6["text"] == " ":
        if turn == 1:
            turn = 2
            btn6["text"]='X'
            btn6["bg"]="blue"
            btn6["fg"]="white"
            send('f')
            check()
        else:
            pass;
        
def clicked7():
    global turn
    if btn7["text"] == " ":
        if turn == 1:
            turn = 2
            btn7["text"]='X'
            btn7["bg"]="blue"
            btn7["fg"]="white"
            send('g')
            check()
        else:
            pass;
        
def clicked8():
    global turn
    if btn8["text"] == " ":
        if turn == 1:
            turn = 2
            btn8["text"]='X'
            btn8["bg"]="blue"
            btn8["fg"]="white"
            send('h')
            check()
        else:
            pass;
        
def clicked9():
    global turn
    if btn9["text"] == " ":
        if turn == 1:
            turn = 2
            btn9["text"]='X'
            btn9["bg"]="blue"
            btn9["fg"]="white"
            send('i')
            check()
        else:
            pass;

#create an empty window
window = Tk()
#change its title
window.title ("Tic tac toe: Server Side")
#change the dimensions
window.geometry ("400x300")
window.config(background="#222222")
#create a label, 
#1st parameter is the container.
#2nd parameter is the text writen in the label.
#3rd parameter is the font type, and size.
lb1= Label(window, text="Player1: X",font=('Comic Sans MS','15'))
lb1.configure(foreground="dimgrey")
lb1.configure(background="#222222")
#positioning the label in a grid in the first row, and first column.
lb1.grid(row=0, column=0)

lb2= Label(window, text="Player2: O",font=('Comic Sans MS','15'))
lb2.configure(foreground="dimgrey")
lb2.configure(background="#222222")
lb2.grid(row=1, column=0)

#space for performing comparison in the action.
#the font is for the x or o when pressend.
#Command is the attribute of the method executed when the button is clicked.
btn1 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked1) 
btn1.grid(row=0,column=1)

btn2 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked2) 
btn2.grid(row=0,column=2)

btn3 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked3) 
btn3.grid(row=0,column=3)

btn4 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked4) 
btn4.grid(row=1,column=1)

btn5 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked5) 
btn5.grid(row=1,column=2)

btn6 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked6) 
btn6.grid(row=1,column=3)

btn7 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked7) 
btn7.grid(row=2,column=1)

btn8 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked8) 
btn8.grid(row=2,column=2)

btn9 = Button(window, text=" ",bg="dimgrey",fg="black", width=3, height=1, font=('Comic Sans MS','15'),command=clicked9) 
btn9.grid(row=2,column=3)

s=socket(AF_INET, SOCK_STREAM)
host = '127.0.0.1'
port = 7005
s.bind((host, port))
s.listen(1)
print ("Server established")
while True:
    c, add=s.accept()
    print("connection from", add[0])
    #create thread for serving that session.
    start_new_thread(receive_thread,(c,))

    window.mainloop()
